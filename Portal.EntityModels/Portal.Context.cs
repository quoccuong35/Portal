//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Portal.EntityModels
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PortalEntities : DbContext
    {
        public PortalEntities()
            : base("name=PortalEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Account> Accounts { get; set; }
        public virtual DbSet<DepartmentCategory> DepartmentCategories { get; set; }
        public virtual DbSet<HistoryModel> HistoryModels { get; set; }
        public virtual DbSet<PagePermissionModel> PagePermissionModels { get; set; }
        public virtual DbSet<MenuModel> MenuModels { get; set; }
        public virtual DbSet<FunctionModel> FunctionModels { get; set; }
        public virtual DbSet<PageModel> PageModels { get; set; }
        public virtual DbSet<DataModel> DataModels { get; set; }
        public virtual DbSet<RolesModel> RolesModels { get; set; }
        public virtual DbSet<TabConfigModel> TabConfigModels { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Position> Positions { get; set; }
        public virtual DbSet<WorkPlace> WorkPlaces { get; set; }
        public virtual DbSet<EmployeeStatusCategory> EmployeeStatusCategories { get; set; }
        public virtual DbSet<ShiftWork> ShiftWorks { get; set; }
        public virtual DbSet<Folk> Folks { get; set; }
        public virtual DbSet<Religion> Religions { get; set; }
        public virtual DbSet<Education> Educations { get; set; }
        public virtual DbSet<Nationality> Nationalities { get; set; }
        public virtual DbSet<LeaveCategory> LeaveCategories { get; set; }
        public virtual DbSet<Bank> Banks { get; set; }
        public virtual DbSet<EmployeeModel> EmployeeModels { get; set; }
        public virtual DbSet<FurloughDetailModel> FurloughDetailModels { get; set; }
        public virtual DbSet<BrowseStatusModel> BrowseStatusModels { get; set; }
        public virtual DbSet<MaTrixFurloughModel> MaTrixFurloughModels { get; set; }
        public virtual DbSet<OvertimeDetailModel> OvertimeDetailModels { get; set; }
        public virtual DbSet<MatrixOvertimeModel> MatrixOvertimeModels { get; set; }
        public virtual DbSet<OvertimeCategory> OvertimeCategories { get; set; }
        public virtual DbSet<ApprovalHistoryModel> ApprovalHistoryModels { get; set; }
        public virtual DbSet<ConfirmWorkingTimeModel> ConfirmWorkingTimeModels { get; set; }
        public virtual DbSet<OvertimeModel> OvertimeModels { get; set; }
        public virtual DbSet<FurloughModel> FurloughModels { get; set; }
        public virtual DbSet<TimeKeepingPeriodModel> TimeKeepingPeriodModels { get; set; }
        public virtual DbSet<HoliDayModel> HoliDayModels { get; set; }
        public virtual DbSet<RALog> RALogs { get; set; }
        public virtual DbSet<WorkdayEditModel> WorkdayEditModels { get; set; }
        public virtual DbSet<EmployeeSpecialModel> EmployeeSpecialModels { get; set; }
        public virtual DbSet<RalogNight> RalogNights { get; set; }
    
        public virtual ObjectResult<Proc_EmployeeModel_Result> Proc_EmployeeModel(string employeeCode, string fullName, Nullable<System.Guid> departmentID, Nullable<System.Guid> employeeStatusCategoryId, Nullable<System.Guid> positionID, Nullable<bool> actived)
        {
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var departmentIDParameter = departmentID.HasValue ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(System.Guid));
    
            var employeeStatusCategoryIdParameter = employeeStatusCategoryId.HasValue ?
                new ObjectParameter("EmployeeStatusCategoryId", employeeStatusCategoryId) :
                new ObjectParameter("EmployeeStatusCategoryId", typeof(System.Guid));
    
            var positionIDParameter = positionID.HasValue ?
                new ObjectParameter("PositionID", positionID) :
                new ObjectParameter("PositionID", typeof(System.Guid));
    
            var activedParameter = actived.HasValue ?
                new ObjectParameter("Actived", actived) :
                new ObjectParameter("Actived", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_EmployeeModel_Result>("Proc_EmployeeModel", employeeCodeParameter, fullNameParameter, departmentIDParameter, employeeStatusCategoryIdParameter, positionIDParameter, activedParameter);
        }
    }
}
